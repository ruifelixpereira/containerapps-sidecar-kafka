targetScope = 'resourceGroup'

// ------------------
//    PARAMETERS
// ------------------

@description('Specifies the Azure location for all resources.')
param location string = resourceGroup().location

@description('Optional. The name of the event hub namespace. If set, it overrides the name generated by the template.')
param eventHubNamespaceName string

@description('The name of the event hub (topic).')
param eventHubName string

@description('Specifies the messaging tier for Event Hub Namespace.')
@allowed([
  'Basic'
  'Standard'
])
param eventHubSku string = 'Standard'

@description('Optional. The tags to be assigned to the created resources.')
param tags object = {}

// ------------------
// RESOURCES
// ------------------

resource eventHubNamespace 'Microsoft.EventHub/namespaces@2021-11-01' = {
  name: eventHubNamespaceName
  location: location
  tags: tags
  sku: {
    name: eventHubSku
    tier: eventHubSku
    capacity: 1
  }
  properties: {
    isAutoInflateEnabled: false
    maximumThroughputUnits: 0
  }
}

resource eventHub 'Microsoft.EventHub/namespaces/eventhubs@2021-11-01' = {
  parent: eventHubNamespace
  name: eventHubName
  properties: {
    messageRetentionInDays: 7
    partitionCount: 1
  }
}

resource ehUniqSendPolicy 'Microsoft.EventHub/namespaces/eventhubs/authorizationRules@2022-01-01-preview' = {
  parent: eventHub
  name: '${eventHubName}-send-policy'
  properties: {
    rights: [
      'Send'
    ]
  }
}

// ------------------
// OUTPUTS
// ------------------

@description('The name of the event hubs namespace.')
output eventHubNamespace string = eventHubNamespace.name

@description('The name of the event hub (topic).')
output eventHubName string = eventHub.name

@description('The name of the event hub (topic).')
output eventHubSendPolicyName string = ehUniqSendPolicy.name
